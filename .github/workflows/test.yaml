name: Run tests
on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      has_coverage: ${{ steps.coverage.outputs.has_coverage }}
      coverage_b64: ${{ steps.coverage.outputs.coverage_b64 }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - uses: browser-actions/setup-chrome@v1
        id: chromedriver
        with:
          chrome-version: stable
          install-chromedriver: true

      - name: Install dependencies
        run: npm install

      - name: Run tests
        id: test
        env:
          CHROME_BIN: ${{ steps.chromedriver.outputs.chrome-path }}
        run: |
          output="$(npm run test:ci)"
          exit_code=$?

          echo "$output"
          echo "output_b64=$(echo -n "$output" | base64 --wrap=0)" >> "$GITHUB_OUTPUT"

          exit $exit_code

      - name: Extract coverage
        id: coverage
        run: |
          set -e
          test_output="$(echo "${{ steps.test.outputs.output_b64 }}" | base64 --decode)"
          coverage="$(echo "$test_output"  | sed -n '/Coverage summary/,$p')"
          has_coverage=$(test "$coverage" != "" && echo true || echo false)

          echo "$coverage"

          echo "has_coverage=$has_coverage" >> "$GITHUB_OUTPUT"
          echo "coverage_b64=$(echo -n "$coverage" | base64 --wrap=0)" >> "$GITHUB_OUTPUT"

  notify:
    if: ${{ needs.test.outputs.has_coverage == 'true' }}
    runs-on: ubuntu-latest
    needs:
      - test

    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Create comment
        run: |
          msg="Coverage report for this PR: \n\n $(echo "${{ needs.test.outputs.coverage_b64 }}" | base64 --decode)"

          curl \
          -H “Authorization: token ${{ secrets.GITHUB_TOKEN }}” \
          -X POST -d “{ \“body\”: \“$msg\” }” \
          “https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments”
